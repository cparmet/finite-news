## Sample parameters to customize a single subscriber's issue

# For frequency configuration, the options are (examples)
# 1. frequency: monthly
#    day_of_week: Monday (spell out full day name, case insensitive. Note day = at time scheduled job is run in UTC)
# 2. frequency: weekly
#    day_of_week: Monday
# 3. frequency: every_other_week
#    day_of_week: Monday
#    eow_odd: True (True means odd week numbers of year. False means even week numbers)
# 4. frequency: daily
# 5. frequency: weekdays

# General config
email: SUBSCRIBER_NAME@SERVER.COM # Where should we deliver the paper?
admin: True # Append technical logs (such as exceptions) at the end of the issue email? Deleting this line also sets the value to False.
issue_frequency: # Optional section: specify how often to deliver the issue. If absent, will deliver daily.
  frequency: weekly
  day_of_week: Monday # If frequency = weekly/every_other_week, spell out full day name, case insensitive. Note day = at time scheduled job is run in UTC

# Customize content
editorial:
  subject: "Finite News" # The email subject
  add_shared_thoughts: False # If True, in addition to list of thoughts_of_the_day below, the issue will also sample the "Thought of the Day" quotes from the shared `thoughts_of_the_day.yml` file.
  last_headlines_file: last_headlines_SUBSCRIBER_NAME.txt # The name of the file on Google Cloud Storage to cache headlines from the last issue. Used to ensure that Finite News doesn't report any headlines the user already saw in the last issue.
sources:
  # all sections that follow are optional. Delete to remove the section
  alerts_sources:
      sources:
        - "fueleconomy.gov: EV incentives (new cars)"
        - "fueleconomy.gov: EV incentives (pre-owned cars)"
        - other `name` in `alert_sources` from publication_config.yml
        - ...
  news_categories: # Which categories of sources from publication_config should this issue inclue?
    - World
    - US
    - My Town Name
    - ...
  events_sources:
      sources:
        - name of event source from publication_config
        - ...
      frequency: # How often to include it in issues?
        frequency: every_other_week
        day_of_week: Monday
        eow_odd: False
  mbta: # List of routes you want alerts for
    -
      frequency: weekdays # Optional. Only report alerts on certain days of week
      route: Red # Required. Options are 'id' values from https://api-v3.mbta.com/routes
      stations: # Required. List of stations on the route you want alerts for. Can get from the URL like https://www.mbta.com/stops/place-sstat, or id or parent_station nested id values from https://api-v3.mbta.com/stops
        - place-sstat # South Station
      direction_id: 1 # Required. 1 for inbound, 0 for outbound
  stocks:
    frequency: monthly # see above for options
    day_of_month: 26 # In UTC as of time code is executed. Blank = 1
    tickers: # one row for each plot. Helpful to separate stocks with similar prices onto different plots.
      - TICKER1, TICKER2
      - TICKER3, TICKER4, TICKER5
  image_categories:
    - Universe
sports: # Optional section and subsections, get yesterday's scores and heads-up about today's games
    nba_teams:
        - Knicks # Use the mascot name
    # hide_nba_scoreboard: True # Add this to only get heads-up on tonight's games in the headlines but not yesterday's box scores for those teams
    nhl_teams:
        - Buffalo, Islanders, Minnesota, Montréal # Use the place name, except for NY teams use the Mascot
    # hide_nhl_scoreboard: True # As with hide_nba_scoreboard

# Configure the forecast, or delete section to omit
forecast:
  # OPTION A: Use National Weather Service for US forecasts
  # To get the values to put below...
  # 1. Find the latitude and longitude for your town using Google Maps for example
  # 2. Run the following code with that lat and lon:
  #   url =f"https://api.weather.gov/points/{lat},{lon}"
  #   r = requests.get(url)
  #   r.json()
  # 3. Extract the following from `r`:  'gridId' (-> office), 'gridX', 'gridY'
  # 4. Entre the town name in your own words
  source: nws
  office: 3-LETTER-CODE
  grid_x: INTEGER
  grid_y: INTEGER
  location_name: STRING

  # OPTION B: Canadian forecasts
  # Enter lat and lon for the location, and give the location a name like a town
  # lat: FLOAT
  # lon: FLOAT
  # location_name: STRING

# The newspaper slogan that goes under the logo in each issue.
# One slogan from the list is selected at random each day.
# Edit or expand the list as you like.
slogans:
  - 1/100th the News That’s Fit to Print.

# A list of quotes or jokes. The section "Thought of Day: will sample one each day.
# See also the parameter above `add_shared_thoughts`.
# Edit or expand the list as you like.
thoughts_of_the_day:
  - "When I was a boy and I would see scary things in the news, my mother would say to me, 'Look for the helpers. You will always find people who are helping.' - Mr Rogers"